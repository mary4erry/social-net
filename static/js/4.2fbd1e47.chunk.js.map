{"version":3,"sources":["HOC/WithAuthRedirect.js","pages/Dialogs/Dialogs.module.css","pages/Dialogs/Message/Message.module.css","pages/Dialogs/DialogItem/DialogItem.jsx","pages/Dialogs/Message/Message.jsx","pages/Dialogs/Dialogs.jsx","pages/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsRedirect","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","id","userpic","user","path","className","style","dialogItem","src","alt","userName","Message","text","message","maxLength100","maxLengthCreator","Textarea","Element","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","message_form","name","component","placeholder","validate","required","Dialogs","dialogsPage","sendMessage","dialogsElements","dialogs","map","dialog","key","msgElements","msgs","msg","dialogs_items","messages","data","newMsgText","compose"],"mappings":"sNAKIA,EAA0B,SAACC,GAAD,MAAY,CACpCC,OAAQD,EAAME,KAAKD,SAGZE,EAAmB,SAACC,GAAe,IACvCC,EADsC,uKAGtC,OAAKC,KAAKC,MAAMN,OAET,kBAACG,EAAcE,KAAKC,OAFI,kBAAC,IAAD,CAAUC,GAAI,eAHP,GACZC,IAAML,WAUtC,OADqCM,YAAQX,EAARW,CAAiCL,K,oBClBzEM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,OAAS,wBAAwB,SAAW,0BAA0B,aAAe,8BAA8B,WAAa,4BAA4B,QAAU,yBAAyB,SAAW,0BAA0B,QAAU,2B,oBCAlVD,EAAOC,QAAU,CAAC,SAAW,0BAA0B,QAAU,2B,8FCclDC,EAVI,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,KAC3BC,EAAO,YAAcH,EACzB,OACG,yBAAKI,UAAWC,IAAMC,YACnB,yBAAKC,IAAKN,EAASG,UAAWC,IAAMJ,QAASO,IAAI,YACjD,kBAAC,IAAD,CAASJ,UAAWC,IAAMI,SAAUf,GAAIS,GAAOD,K,kBCDzCQ,EANC,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACf,OAAO,yBACJP,UAAWC,IAAMO,SAClBD,I,yCCGCE,EAAeC,YAAiB,KAChCC,EAAWC,YAAQ,YAmBnBC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAjBL,SAACzB,GACrB,OACG,0BAAM2B,SAAU3B,EAAM4B,cACnB,kBAACC,EAAA,EAAD,CACGlB,UAAWC,IAAMkB,aACjBC,KAAK,aACLC,UAAWV,EACXW,YAAY,wBACZC,SAAU,CAACC,IAAUf,KAExB,6BACG,sDA8CGgB,EAtCC,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,YAAa5C,EAAY,EAAZA,OACtCD,EAAQ4C,EAERE,EAAkB9C,EAAM+C,QAAQC,KAAI,SAAAC,GAAM,OAC3C,kBAAC,EAAD,CACGjC,KAAMiC,EAAO1B,SACbT,GAAImC,EAAOnC,GACXoC,IAAKD,EAAOnC,GACZC,QAASkC,EAAOlC,aAGlBoC,EAAcnD,EAAMoD,KAAKJ,KAAI,SAAAK,GAAG,OACjC,kBAAC,EAAD,CACG5B,KAAM4B,EAAI5B,KACVX,GAAIuC,EAAIvC,GAAIoC,IAAKG,EAAIvC,QAO3B,OAAKb,EAGF,yBAAKiB,UAAWC,IAAM4B,SACnB,yBAAK7B,UAAWC,IAAMmC,eAElBR,GAEJ,yBAAK5B,UAAWC,IAAMoC,UAElBJ,EACD,kBAACpB,EAAD,CAAqBG,SAfR,SAACsB,GACpBX,EAAYW,EAAKC,iBAGA,kBAAC,IAAD,CAAUjD,GAAI,Y,yBCtCtBkD,sBACZhD,aAPmB,SAACV,GACpB,MAAO,CACJ4C,YAAa5C,EAAM4C,eAKG,CAACC,kBAC1B1C,IAFYuD,CAGbf","file":"static/js/4.2fbd1e47.chunk.js","sourcesContent":["import React from 'react';\n// import { ReactComponent } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nlet mapStateToPropsRedirect = (state) => ({\n      isAuth: state.auth.isAuth\n})\n\nexport const WithAuthRedirect = (Component) => {\n   class RedirectComponent extends React.Component {\n      render () {\n         if (!this.props.isAuth) return <Redirect to={'/login'}/>\n\n         return <Component {...this.props}/>\n      }\n      \n   }\n   \n   let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent)\n   return ConnectedAuthRedirectComponent\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__32wgu\",\"dialogs_items\":\"Dialogs_dialogs_items__1JthF\",\"active\":\"Dialogs_active__3Bm-M\",\"messages\":\"Dialogs_messages__2zk66\",\"message_form\":\"Dialogs_message_form__2OFvK\",\"dialogItem\":\"Dialogs_dialogItem__19MRj\",\"userpic\":\"Dialogs_userpic__35-S4\",\"userName\":\"Dialogs_userName__2woA7\",\"message\":\"Dialogs_message__3_pO5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__rXoPj\",\"message\":\"Message_message__o3jLa\"};","import React from 'react'\nimport style from '../Dialogs.module.css'\n\nimport { NavLink } from 'react-router-dom'\n\nconst DialogItem = ({id, userpic, user}) => {\n   let path = '/dialogs/' + id\n   return (\n      <div className={style.dialogItem}>\n         <img src={userpic} className={style.userpic} alt=\"userpic\"/>\n         <NavLink className={style.userName} to={path}>{user}</NavLink>\n      </div>\n   )\n}\n\nexport default DialogItem\n","import React from 'react'\nimport style from './Message.module.css'\n\nconst Message = ({text}) => {\n   return <div \n      className={style.message}\n   >{text}</div>\n}\n\nexport default Message\n","import React from 'react'\nimport DialogItem from './DialogItem/DialogItem.jsx'\nimport style from './Dialogs.module.css'\nimport Message from './Message/Message.jsx'\nimport { Redirect } from 'react-router-dom'\nimport { Field, reduxForm } from 'redux-form'\nimport { Element } from '../../controls/FormsControls/FormsControls.js'\nimport { required, maxLengthCreator } from '../../utils/validators/validator.js'\n\nconst maxLength100 = maxLengthCreator(100)\nconst Textarea = Element('textarea')\n\nconst AddMessageForm = (props) => {\n   return (\n      <form onSubmit={props.handleSubmit}>\n         <Field\n            className={style.message_form}\n            name='newMsgText'\n            component={Textarea}\n            placeholder=\"Enter your message...\"\n            validate={[required, maxLength100]}\n         />\n         <div>\n            <button> Send message</button>\n         </div>\n      </form>\n   )\n}\n\nconst AddMessageReduxForm = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm)\n\nconst Dialogs = ({ dialogsPage, sendMessage, isAuth}) => {\n   let state = dialogsPage\n\n   let dialogsElements = state.dialogs.map(dialog => \n      <DialogItem \n         user={dialog.userName} \n         id={dialog.id} \n         key={dialog.id}\n         userpic={dialog.userpic}/>\n   )\n\n   let msgElements = state.msgs.map(msg => \n      <Message \n         text={msg.text} \n         id={msg.id} key={msg.id}/>\n   )            \n\n   const addNewMessage = (data) => {\n      sendMessage(data.newMsgText);\n   }\n\n   if (!isAuth) return <Redirect to={'/login'}/>\n   \n   return (\n      <div className={style.dialogs}>\n         <div className={style.dialogs_items}>\n\n            {dialogsElements}\n         </div>\n         <div className={style.messages}>\n\n            {msgElements}\n            <AddMessageReduxForm onSubmit={addNewMessage}/>\n         </div>\n      </div>\n   )\n}\n\nexport default Dialogs\n","// import React from 'react'\nimport {connect} from 'react-redux'\n\nimport Dialogs from './Dialogs'\nimport { sendMessage } from '../../redux/reducers/dialogs.reducer'\nimport { WithAuthRedirect } from '../../HOC/WithAuthRedirect'\nimport { compose } from 'redux'\n\nlet mapStateToProps = (state) => {\n   return {\n      dialogsPage: state.dialogsPage,\n   }\n}\n\nexport default compose(\n   connect(mapStateToProps, {sendMessage,}),\n   WithAuthRedirect\n)(Dialogs)\n"],"sourceRoot":""}