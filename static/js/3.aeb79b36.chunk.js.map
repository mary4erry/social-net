{"version":3,"sources":["HOC/WithAuthRedirect.js","pages/Profile/ProfileInfo/ProfileInfo.module.css","pages/Profile/MyPosts/Post.module.css","pages/Profile/MyPosts/MyPosts.module.css","pages/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","pages/Profile/ProfileInfo/ProfileDataForm.jsx","pages/Profile/ProfileInfo/ProfileInfo.jsx","pages/Profile/MyPosts/Post.jsx","pages/Profile/MyPosts/MyPosts.jsx","pages/Profile/MyPosts/MyPostsContainer.jsx","pages/Profile/Profile.jsx","pages/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsRedirect","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","value","onBlur","updateStatus","type","autoFocus","onDoubleClick","Input","Element","Textarea","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","style","profileEditForm","createField","Object","keys","contacts","map","key","contact","styleAction","formSummaryError","ProfileInfo","saveProfile","isOwner","savePhoto","Loader","profileInfo","profilePhotoBlock","ava_big","src","photos","large","ProfilePhoto","alt","target","files","length","profilePhotoSelectHandler","initialValues","formData","then","activateEditMode","ProfileData","description","onClick","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","Contact","Post","message","likesCount","item","width","item_body","maxLength10","maxLengthCreator","PostsReduxForm","Field","component","name","placeholder","validate","required","MyPosts","memo","postItems","posts","reverse","p","id","posts_block","data","addPost","newPostText","post","MyPostsContainer","profilePage","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","withRouter"],"mappings":"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","file":"static/js/3.aeb79b36.chunk.js","sourcesContent":["import React from 'react';\n// import { ReactComponent } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nlet mapStateToPropsRedirect = (state) => ({\n      isAuth: state.auth.isAuth\n})\n\nexport const WithAuthRedirect = (Component) => {\n   class RedirectComponent extends React.Component {\n      render () {\n         if (!this.props.isAuth) return <Redirect to={'/login'}/>\n\n         return <Component {...this.props}/>\n      }\n      \n   }\n   \n   let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent)\n   return ConnectedAuthRedirectComponent\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__2U3nK\",\"ava_big\":\"ProfileInfo_ava_big__3DR3o\",\"description\":\"ProfileInfo_description__fzLrg\",\"contact\":\"ProfileInfo_contact__BcVYE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3W5bG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts_block\":\"MyPosts_posts_block__2s_oM\",\"post\":\"MyPosts_post__36x2i\"};","import React, { useState, useEffect } from 'react'\n\nconst ProfileStatusWithHooks = (props) => {\n\n   let [editMode, setEditMode] = useState(false)\n   let [status, setStatus] = useState(props.status)\n\n   useEffect( () => { //вызывается после отрисовки\n      setStatus(props.status)\n   }, [props.status]) //зависимость\n\n   const activateEditMode = () => {\n      setEditMode(true)\n   }\n   const deactivateEditMode = () => {\n      setEditMode(false)\n      props.updateStatus(status);\n   };\n\n   const onStatusChange = (e) => {\n      setStatus(e.currentTarget.value);\n   };\n\n   return (\n      <div> {editMode \n         ? (<div>\n               <input\n                  onChange={onStatusChange}\n                  onBlur={deactivateEditMode}\n                  value={status}\n                  type=\"text\"\n                  autoFocus={true} />\n            </div>) \n         : (<div>\n               <span onDoubleClick={activateEditMode} >\n                  <b>Status: </b>{props.status || \"---\"}\n               </span>\n            </div>)}\n      </div>\n   );\n}\n\nexport default  ProfileStatusWithHooks","import React from 'react'\nimport style from './ProfileInfo.module.css'\nimport styleAction from '../../../controls/FormsControls/FormsControls.module.css'\nimport { reduxForm } from 'redux-form'\n\n// import Input from '../../../Forms/Login/Login'\nimport { createField, Element } from '../../../controls/FormsControls/FormsControls'\n\nconst Input = Element('input')\nconst Textarea = Element('textarea')\n\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\n   return <form onSubmit={handleSubmit} \n               className={style.profileEditForm}>\n      <div> <b>Full name</b> \n         {createField('Full name', 'fullName', Input)}\n      </div>\n      <div> <b>About me: </b>  \n         {createField('About me', 'AboutMe', Textarea)}\n         </div>\n      <div> <b>Looking for a job: </b> \n         {createField('', 'LookingForAJob', Input, [ ], {type: 'checkbox'})} \n         </div>\n      <div> <b>My professional skils:  </b> \n         {createField('My professional skils', 'lookingForAJobDescription', Textarea, [])}\n         </div>\n      <div>\n         <b> Contacts: </b> {Object.keys(profile.contacts).map(key => { \n            return <div className={style.contact} key={key}>\n               <b>{key}: </b> {createField(key, 'contacts.' + key, Input)}\n            </div>}\n         )}\n            \n      </div> \n      { error && <div className={styleAction.formSummaryError}>\n            {error}\n         </div>} \n      <div><button>Save</button></div>  \n   </form>\n}\nconst ProfileDataFormReduxForm = reduxForm({ form: 'editProfileInfo' })(ProfileDataForm)\nexport default ProfileDataFormReduxForm ","import React, { useState } from 'react'\n// import ReactDom from 'react-dom'\n\nimport style from './ProfileInfo.module.css'\nimport ProfilePhoto from '../../../assets/userpic.png'\nimport Loader from '../../../controls/Loader/Loader'\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\nimport ProfileDataForm from './ProfileDataForm.jsx'\n\nconst ProfileInfo = ({ saveProfile, profile, status, updateStatus, isOwner, savePhoto }) => {\n   let [editMode, setEditMode] = useState(false)\n\n   if (!profile) {\n      return <Loader />\n   }\n   const profilePhotoSelectHandler = (e) => {\n      if (e.target.files.length) {\n         savePhoto(e.target.files[0])\n      }\n   }\n   const onSubmit = (formData) => {\n      saveProfile(formData).then(\n         () => {\n             setEditMode(false)\n         }\n      )\n   }\n   return (\n      <div className={style.profileInfo}>\n         {/* <div className={style.bgPhoto}>\n            <img\n               src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTueDqN7PI3oDcOWB2Y-RB-7CViMGHY9WurWemhCStStiFAhtVv&usqp=CAU\"\n               alt=\"\"\n            />\n         </div> */}\n         <div className={style.profilePhotoBlock}>\n            <img className={style.ava_big} src={profile.photos.large || ProfilePhoto } alt=\"\"/>\n            {isOwner && \n               <div>\n                  <input type={'file'}\n                     onChange={(e) => {profilePhotoSelectHandler(e)}}></input>\n               </div>}\n         </div>\n         <ProfileStatusWithHooks \n            status={status}\n            updateStatus={updateStatus} />\n         {editMode \n            ? <ProfileDataForm profile={profile}\n               initialValues={profile}\n               isOwner={isOwner}\n               onSubmit={onSubmit}\n               /> \n            : <ProfileData profile={profile}\n               isOwner={isOwner}\n               status={status}\n               updateStatus={updateStatus}\n               activateEditMode={() => {setEditMode(true)}}\n               />\n         }\n      </div>\n   )\n}\nexport default ProfileInfo\n\nconst ProfileData = ({profile, status, updateStatus, isOwner, activateEditMode}) => {\n   return <div className={style.description}>   \n         \n         {isOwner && <div><button onClick={activateEditMode}>Edit profile info</button></div>}\n         <b>{profile.fullName}</b>\n         <div> <b>About me: </b> {profile.aboutMe} </div>\n         {profile.lookingForAJob \n            && <div> <b>Looking for a job: </b> {profile.lookingForAJobDescription} </div>}\n         <div>\n            <b> Contacts: </b> {Object.keys(profile.contacts).map(key => { \n               return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/> })}\n         </div>\n      </div>\n}\n\nconst Contact = ({contactTitle, contactValue}) => {\n   return <div className={style.contact}><b>{contactTitle} :</b>{contactValue} </div>\n}","import React from 'react'\n// import ReactDom from 'react-dom'\n\nimport style from './Post.module.css'\n\nconst Post = ({message, likesCount}) => {\n   return (\n      <div className={style.item}>\n         <img\n            width=\"50px\"\n            src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcS4bkPT14o4_n_lnU-3DNyZol1LE0vParolHN-kXQTD8exgO4-8&usqp=CAU\"\n            alt=\"\"\n         />\n         <div className={style.item_body}>\n            <div>{message}</div>\n         <div>\n            <span>likes {likesCount}</span>\n         </div>\n         </div>\n         \n      </div>\n   )\n}\nexport default Post\n","import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\n\nimport Post from './Post.jsx'\nimport style from './MyPosts.module.css'\nimport { required, maxLengthCreator } from '../../../utils/validators/validator.js'\nimport { Element } from '../../../controls/FormsControls/FormsControls.js'\n\nconst maxLength10 =  maxLengthCreator(10)\nconst Textarea = Element('textarea')\n\nconst AddPostForm = ({handleSubmit}) => {\n   return (\n      <form onSubmit={handleSubmit}>\n         <div>\n            <Field\n               component={Textarea}\n               name='newPostText'\n               placeholder={'Type text'}\n               validate={[required, maxLength10]}\n               />\n         </div>\n         <div>\n            <button>Add post</button>\n         </div>\n      </form>\n   )\n}\n\nconst PostsReduxForm = reduxForm({ form: 'addPostForm' })(AddPostForm)\n\nconst MyPosts = React.memo(props => {\n\n// shouldComponentUpdate(nextProps, nextState) {\n//    return nextProps != this.props || nextState != this.state\n// } // in class component (PureComponent)\n\n   let postItems = \n      [...props.posts]\n         .reverse()\n         .map( p => \n            <Post\n               message={p.message}\n               likesCount={p.likesCount}\n               id={p.id} key={p.id}/>\n         )\n   const onAddPost = (data) => {\n      props.addPost(data.newPostText);\n   }\n   return (\n      <div className={style.posts_block}>\n         <h3>My posts</h3>\n         <PostsReduxForm onSubmit={onAddPost}/>\n         <div className={style.post}>\n            {postItems}\n         </div>\n      </div>\n   )\n})\nexport default MyPosts\n","// import React from 'react'\nimport {connect} from 'react-redux'\n\nimport { addPost } from '../../../redux/reducers/profile.reducer'\nimport MyPosts from './MyPosts.jsx'\n\nlet mapStateToProps =(state) => {\n   return {\n      posts: state.profilePage.posts,\n      newPostText: state.profilePage.newPostText \n   }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts)\n\nexport default MyPostsContainer\n","import React from 'react'\n// import ReactDom from 'react-dom'\n\n// import style from './Profile.module.css'\nimport ProfileInfo from './ProfileInfo/ProfileInfo.jsx'\nimport MyPostsContainer from './MyPosts/MyPostsContainer.jsx'\n\nconst Profile = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\n\n   return (\n      <div>\n         <ProfileInfo \n            isOwner={isOwner}\n            profile={profile}\n            status={status} \n            updateStatus={updateStatus} \n            savePhoto={savePhoto}\n            saveProfile={saveProfile}\n         />\n         <MyPostsContainer/>\n      </div>\n   )\n}\nexport default Profile\n","import React from 'react'\nimport Profile from './Profile.jsx'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { compose } from 'redux'\n\nimport { WithAuthRedirect } from '../../HOC/WithAuthRedirect.js'\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from '../../redux/reducers/profile.reducer'\n\nclass ProfileContainer extends React.Component {\n   refreshProfile() {\n      let userId = this.props.match.params.userId\n      if (!userId) {\n         userId = this.props.authorizedUserId\n         if(!userId ) {\n            this.props.history.push('/login')\n         } // redirect to login. cant see users profiles \n      } \n      this.props.getUserProfile(userId)\n      this.props.getStatus(userId)\n   }\n   componentDidMount() {\n      this.refreshProfile()\n   }\n   componentDidUpdate(prevProps, prevState, snapshot) {\n      if (this.props.match.params.userId !== prevProps.match.params.userId)\n      this.refreshProfile()\n   }\n   render () {\n\n      return (\n         <div>\n            <Profile {...this.props} \n               profile={this.props.profile}\n               status={this.props.status} \n               updateStatus={this.props.updateStatus} \n               isOwner={!this.props.match.params.userId}\n               savePhoto={this.props.savePhoto}\n            />\n         </div>\n      )\n   }  \n}\n\nlet mapStateToProps = (state) => ({\n   profile: state.profilePage.profile,\n   status: state.profilePage.status,\n   authorizedUserId: state.auth.userId,\n   isAuth: state.auth.isAuth,\n})\n\nexport default compose(\n   connect( mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\n   withRouter,\n   WithAuthRedirect\n)(ProfileContainer)\n"],"sourceRoot":""}