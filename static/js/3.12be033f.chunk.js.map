{"version":3,"sources":["HOC/WithAuthRedirect.js","pages/Profile/ProfileInfo/ProfileInfo.module.css","pages/Profile/MyPosts/Post.module.css","pages/Profile/MyPosts/MyPosts.module.css","pages/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","pages/Profile/ProfileInfo/ProfileInfo.jsx","pages/Profile/MyPosts/Post.jsx","pages/Profile/MyPosts/MyPosts.jsx","pages/Profile/MyPosts/MyPostsContainer.jsx","pages/Profile/Profile.jsx","pages/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsRedirect","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","value","onBlur","updateStatus","type","autoFocus","onDoubleClick","ProfileInfo","profile","className","style","description","ava_big","src","photos","large","alt","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Loader","Post","message","likesCount","item","width","item_body","maxLength10","maxLengthCreator","Textarea","Element","PostsReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","component","name","placeholder","validate","required","MyPosts","memo","postItems","posts","reverse","map","p","id","key","posts_block","data","addPost","newPostText","post","MyPostsContainer","profilePage","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.12be033f.chunk.js","sourcesContent":["import React from 'react';\n// import { ReactComponent } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nlet mapStateToPropsRedirect = (state) => ({\n      isAuth: state.auth.isAuth\n})\n\nexport const WithAuthRedirect = (Component) => {\n   class RedirectComponent extends React.Component {\n      render () {\n         if (!this.props.isAuth) return <Redirect to={'/login'}/>\n\n         return <Component {...this.props}/>\n      }\n      \n   }\n   \n   let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent)\n   return ConnectedAuthRedirectComponent\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bgPhoto\":\"ProfileInfo_bgPhoto__1J_Di\",\"ava_big\":\"ProfileInfo_ava_big__3DR3o\",\"description\":\"ProfileInfo_description__fzLrg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3W5bG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts_block\":\"MyPosts_posts_block__2s_oM\",\"post\":\"MyPosts_post__36x2i\"};","import React, { useState, useEffect } from 'react'\n\nconst ProfileStatusWithHooks = (props) => {\n\n   let [editMode, setEditMode] = useState(false)\n   let [status, setStatus] = useState(props.status)\n\n   // const toggleEditMode = () => {\n   //    !setEditMode() ? setEditMode (false) && props.updateStatus(status) : setEditMode(true)\n   // }\n\n   useEffect( () => { //вызывается после отрисовки\n      setStatus(props.status)\n   }, [props.status]) //зависимость\n\n   const activateEditMode = () => {\n      setEditMode(true)\n   }\n   const deactivateEditMode = () => {\n      setEditMode(false)\n      props.updateStatus(status);\n   };\n\n   const onStatusChange = (e) => {\n      setStatus(e.currentTarget.value);\n   };\n\n   return (\n      <div> {editMode \n         ? (<div>\n               <input\n                  onChange={onStatusChange}\n                  onBlur={deactivateEditMode}\n                  value={status}\n                  type=\"text\"\n                  autoFocus={true} />\n            </div>) \n         : (<div>\n               <span onDoubleClick={activateEditMode} >\n                  {props.status || \"---\"}\n               </span>\n            </div>)}\n      </div>\n   );\n}\n\nexport default  ProfileStatusWithHooks","import React from 'react'\n// import ReactDom from 'react-dom'\n\nimport style from './ProfileInfo.module.css'\nimport Loader from '../../../controls/Loader/Loader'\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\n\nconst ProfileInfo = ({profile, status, updateStatus}) => {\n   if (!profile) {\n      return <Loader />\n   }\n   \n   return (\n      <div>\n         {/* <div className={style.bgPhoto}>\n            <img\n               src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTueDqN7PI3oDcOWB2Y-RB-7CViMGHY9WurWemhCStStiFAhtVv&usqp=CAU\"\n               alt=\"\"\n            />\n         </div> */}\n         <div className={style.description}>\n            <img className={style.ava_big} src={profile.photos.large} alt=\"\"/>\n            \n            <ProfileStatusWithHooks \n               status={status}\n               updateStatus={updateStatus} />\n            <div> {profile.fullName} </div>\n            {profile.aboutMe \n               && <div> О себе: {profile.aboutMe} </div>}\n            \n            {profile.lookingForAJob \n               && <div> Рассмотрю предложения о работе: {profile.lookingForAJobDescription}</div>}\n            <div>\n               Contacts: \n               {/* {profile.contacts.map( c => \n                  <span>{c}</span>\n               )} */}\n               {/* {profile.contacts.github} */}\n            </div>\n         </div>\n      </div>\n   )\n}\nexport default ProfileInfo\n","import React from 'react'\n// import ReactDom from 'react-dom'\n\nimport style from './Post.module.css'\n\nconst Post = ({message, likesCount}) => {\n   return (\n      <div className={style.item}>\n         <img\n            width=\"50px\"\n            src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcS4bkPT14o4_n_lnU-3DNyZol1LE0vParolHN-kXQTD8exgO4-8&usqp=CAU\"\n            alt=\"\"\n         />\n         <div className={style.item_body}>\n            <div>{message}</div>\n         <div>\n            <span>likes {likesCount}</span>\n         </div>\n         </div>\n         \n      </div>\n   )\n}\nexport default Post\n","import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\n\nimport Post from './Post.jsx'\nimport style from './MyPosts.module.css'\nimport { required, maxLengthCreator } from '../../../utils/validators/validator.js'\nimport { Element } from '../../../controls/FormsControls/FormsControls.js'\n\nconst maxLength10 =  maxLengthCreator(10)\nconst Textarea = Element('textarea')\n\nconst AddPostForm = ({handleSubmit}) => {\n   return (\n      <form onSubmit={handleSubmit}>\n         <div>\n            <Field\n               component={Textarea}\n               name='newPostText'\n               placeholder={'Type text'}\n               validate={[required, maxLength10]}\n               />\n         </div>\n         <div>\n            <button>Add post</button>\n         </div>\n      </form>\n   )\n}\n\nconst PostsReduxForm = reduxForm({ form: 'addPostForm' })(AddPostForm)\n\nconst MyPosts = React.memo(props => {\n\n// shouldComponentUpdate(nextProps, nextState) {\n//    return nextProps != this.props || nextState != this.state\n// } // in class component (PureComponent)\n\n   let postItems = \n      [...props.posts]\n         .reverse()\n         .map( p => \n            <Post\n               message={p.message}\n               likesCount={p.likesCount}\n               id={p.id} key={p.id}/>\n         )\n   const onAddPost = (data) => {\n      props.addPost(data.newPostText);\n   }\n   return (\n      <div className={style.posts_block}>\n         <h3>My posts</h3>\n         <PostsReduxForm onSubmit={onAddPost}/>\n         <div className={style.post}>\n            {postItems}\n         </div>\n      </div>\n   )\n})\nexport default MyPosts\n","// import React from 'react'\nimport {connect} from 'react-redux'\n\nimport { addPost } from '../../../redux/reducers/profile.reducer'\nimport MyPosts from './MyPosts.jsx'\n\nlet mapStateToProps =(state) => {\n   return {\n      posts: state.profilePage.posts,\n      newPostText: state.profilePage.newPostText \n   }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts)\n\nexport default MyPostsContainer\n","import React from 'react'\n// import ReactDom from 'react-dom'\n\n// import style from './Profile.module.css'\nimport ProfileInfo from './ProfileInfo/ProfileInfo.jsx'\nimport MyPostsContainer from './MyPosts/MyPostsContainer.jsx'\n\nconst Profile = ({profile, status, updateStatus}) => {\n\n   return (\n      <div>\n         <ProfileInfo \n            profile={profile}\n            status={status} \n            updateStatus={updateStatus} \n         />\n         <MyPostsContainer/>\n      </div>\n   )\n}\nexport default Profile\n","import React from 'react'\nimport Profile from './Profile.jsx'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { compose } from 'redux'\n\nimport { WithAuthRedirect } from '../../HOC/WithAuthRedirect.js'\nimport {getUserProfile, getStatus, updateStatus} from '../../redux/reducers/profile.reducer'\n\nclass ProfileContainer extends React.Component {\n   componentDidMount () {\n      let userId = this.props.match.params.userId\n      if (!userId) {\n         userId = this.props.authorizedUserId\n         if(!userId ) {\n            this.props.history.push('/login')\n         } // redirect to login. cant see users profiles \n      } \n      this.props.getUserProfile(userId)\n      this.props.getStatus(userId)\n   }\n   render () {\n\n      return (\n         <div>\n            <Profile {...this.props} \n               profile={this.props.profile}\n               status={this.props.status} \n               updateStatus={this.props.updateStatus} \n            />\n         </div>\n      )\n   }  \n}\n\nlet mapStateToProps = (state) => ({\n   profile: state.profilePage.profile,\n   status: state.profilePage.status,\n   authorizedUserId: state.auth.userId,\n   isAuth: state.auth.isAuth,\n})\n\nexport default compose(\n   connect( mapStateToProps, { getUserProfile, getStatus, updateStatus }),\n   withRouter,\n   WithAuthRedirect\n)(ProfileContainer)\n"],"sourceRoot":""}